#!/bin/bash
#-- NOT A REAL SHELL SCRIPT!   This is a cut'n'paste scriptlet!
#   Be sure to read & understand what you're cutting & pasting!
#------------------------------------------------------------------------------
# name:    Misc. Notes (miscNotes)
# author:  awmyhr@gmail.com
# revised: 20190725-115234
# created: 2018-06-26
#------------------------------------------------------------------------------
#-- XDG Base Directory Specification
#------------------------------------------------------------------------------
#-- https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
#-- Introduction
#   Various specifications specify files and file formats. This specification
#   defines where these files should be looked for by defining one or more base
#   directories relative to which files should be located.
#-- Basics
#   The XDG Base Directory Specification is based on the following concepts:
#   Single base directory relative to which user-specific data files should be written.
#   Default: $HOME/.local/share
$XDG_DATA_HOME

#   Single base directory relative to which user-specific configuration files should be written.
#   Default: $HOME/.config
$XDG_CONFIG_HOME

#   Set of preference ordered base directories relative to which data files should be searched.
#   The directories should be seperated with a colon ':'.
#   Default: /usr/local/share/:/usr/share/
$XDG_DATA_DIRS

#   Set of preference ordered base directories relative to which configuration files should be searched.
#   The directories should be seperated with a colon ':'.
#   Default: /etc/xdg
$XDG_CONFIG_DIRS

#   Single base directory relative to which user-specific non-essential (cached) data should be written.
#   Default: $HOME/.cache
$XDG_CACHE_HOME

#   Single base directory relative to which user-specific runtime files and other file objects should be placed.
#   The directory MUST be owned by the user, and he MUST be the only one having read and write access to it. Its Unix access mode MUST be 0700.
#   The lifetime of the directory MUST be bound to the user being logged in.
#   It MUST be created when the user first logs in and if the user fully logs
#   out the directory MUST be removed. If the user logs in more than once he
#   should get pointed to the same directory, and it is mandatory that the
#   directory continues to exist from his first login to his last logout on the
#   system, and not removed in between. Files in the directory MUST not survive
#   reboot or a full logout/login cycle.
#
#   The directory MUST be on a local file system and not shared with any other
#   system. The directory MUST by fully-featured by the standards of the operating
#   system. More specifically, on Unix-like operating systems AF_UNIX sockets,
#   symbolic links, hard links, proper permissions, file locking, sparse files,
#   memory mapping, file change notifications, a reliable hard link count must
#   be supported, and no restrictions on the file name character set should be
#   imposed. Files in this directory MAY be subjected to periodic clean-up. To ensure that your files are not removed, they should have their access time timestamp modified at least once every 6 hours of monotonic time or the 'sticky' bit should be set on the file.
#   Default: fall back to a replacement
#            directory with similar capabilities and print a warning message.
#            Applications should use this directory for communication and
#            synchronization purposes and should not place larger files in it,
#            since it might reside in runtime memory and cannot necessarily be swapped
#            out to disk.
$XDG_RUNTIME_DIR

# Referencing this specification
# Other specifications may reference this specification by specifying the
# location of a data file as $XDG_DATA_DIRS/subdir/filename. This implies that:

# Such file should be installed to $datadir/subdir/filename with $datadir
# defaulting to /usr/share.

# A user specific version of the data file may be created in
# $XDG_DATA_HOME/subdir/filename, taking into account the default value for
# $XDG_DATA_HOME if $XDG_DATA_HOME is not set.

# Lookups of the data file should search for ./subdir/filename relative to all
# base directories specified by $XDG_DATA_HOME and $XDG_DATA_DIRS . If an
# environment variable is either not set or empty, its default value as defined
# by this specification should be used instead.

# Specifications may reference this specification by specifying the location of
# a configuration file as $XDG_CONFIG_DIRS/subdir/filename. This implies that:

# Default configuration files should be installed to
# $sysconfdir/xdg/subdir/filename with $sysconfdir defaulting to /etc.

# A user specific version of the configuration file may be created in
# $XDG_CONFIG_HOME/subdir/filename, taking into account the default value for
# $XDG_CONFIG_HOME if $XDG_CONFIG_HOME is not set.

# Lookups of the configuration file should search for ./subdir/filename relative
# to all base directories indicated by $XDG_CONFIG_HOME and $XDG_CONFIG_DIRS.
# If an environment variable is either not set or empty, its default value as
# defined by this specification should be used instead.

# If, when attempting to write a file, the destination directory is non-existant
# an attempt should be made to create it with permission 0700. If the destination
# directory exists already the permissions should not be changed. The application
# should be prepared to handle the case where the file could not be written,
# either because the directory was non-existant and could not be created,
# or for any other reason. In such case it may chose to present an error message
# to the user.

# When attempting to read a file, if for any reason a file in a certain directory
# is unaccessible, e.g. because the directory is non-existant, the file is
# non-existant or the user is not authorized to open the file, then the processing
# of the file in that directory should be skipped. If due to this a required
# file could not be found at all, the application may chose to present an error
# message to the user.

# A specification that refers to $XDG_DATA_DIRS or $XDG_CONFIG_DIRS should
# define what the behaviour must be when a file is located under multiple base
# directories. It could, for example, define that only the file under the most
# important base directory should be used or, as another example, it could
# define rules for merging the information from the different files.
if [ -d "${XDG_RUNTIME_DIR}" ] ; then
    echo great
else
    echo we should fix this
fi
#------------------------------------------------------------------------------
#-- ref: https://paste.xinu.at/x9bW2f/
#------------------------------------------------------------------------------
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
export IBUS_SOCK="$XDG_RUNTIME_DIR/ibus.socket"
export GOPATH=$HOME/.go
export GOBIN=$HOME/.go/bin
# protect special characters
export LC_CTYPE="en_US.UTF-8"
#------------------------------------------------------------------------------
#-- terminal symbols
#------------------------------------------------------------------------------
#--
# TERMCAP

# A = ansi
# C = con*
# Y = cygwin
# D = dvtm* [*color*]
# E = Eterm*  [*color*]
# F = fbterm
# G = gnome* [*color*]
# K = konsole* [*color*]
# L = linux*  [*-c]
# P = putty* [*color*]
# R = rxvt* [*color*]
# S = screen* [*color*]
# s = st* [*color*]
# T = tmux* [*color*]
# V = vt*
# X = xterm* [*color*]

# Note: tmux will show 'screen' for $TERM, but should have a variable 'TMUX' set
#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
#-- in virtual box
# create new vm (linux/fedora 64-bit)
# 2 - 4 GB (depending on physical memory)
# create VDI disks, dynamically allocated
#
# sda -> 64G
#
# In settings:
# General:
#     Advnanced: shared clipboard bidirectional
# System:
#     Motherboard:
#         disable floppy
#     Processor:
#         2 cpu (if youve got the threads)
#         enable pae/nx
#     Acceleration:
#         kvm, enable vt-x/amd-v and nested paging
# Display:
#     screen:
#         video ram 64 MB
#         enable 3d Acceleration
# Storage:
#     remove IDE controller
#     add cdrom to SATA
#     select 'use host i/o cache'
# Audio:
#     disable
# Network:
#     adapter 1
#         attached to: NAT network
#             advanced: use paravirtualized network
#
# #-- boot fedora workstation netinstall (from https://alt.fedoraproject.org/)
#
# Install destination
#     select all disks, choose "I will configure partitioning", then done
#     add standard partition of 1024M for /boot
#     add 10G partition for /
#         change device type to LVM thin Provisioning (should be fedora VG)
#         change filesystem to xfs
#         click update settings
#     add 5G partition for /var
#         change device type to LVM thin Provisioning (should be fedora VG)
#         change filesystem to xfs
#         click update settings
#     add 2G partition for swap
#         change device type to LVM thin Provisioning (should be fedora VG)
#         click update settings
#     add 5G partition for home
#         change device type to LVM thin Provisioning (should be fedora VG)
#         change filesystem to xfs
#         click update settings
#         chose "modify" under VG, change size policy to 'as large as possible'
#         click update settings
#
# You should end w/~36GiB available from a total of 64GiB
# select done and accept changes
#
# Software Selection
#     Select Base Environment of choice. Recommendations:
#         Xfce Desktop
#         LXDE Desktop
#         Hawaii Desktop
#         LXQt Desktop
#         (One could just go with Fedora Workstation and build from there)
#         (We will go with LXQt Desktop here)
#     Select preferred add-ons
#         (whatever you want here, or do it all after)
#         (recommend to not go too crazy here)
#         (We will go with none here)
#
# Begin install, create root password and user
#
#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
/etc/altlinux-release
/etc/angstrom-version
/etc/arch-release
/etc/debian_version
/etc/fedora-release
/etc/frugalware-release
/etc/gentoo-release
/etc/mageia-release
/etc/mandriva-release
/etc/meego-release
/etc/redhat-release
/etc/slackware-version
/etc/SuSE-release
#------------------------------------------------------------------------------
#-- Quick "analysis" of DistroWatch top distros
#   Likely worth the time to at least poke at these...
#------------------------------------------------------------------------------
Alpine [Server] (---) ^
Arch [Server] (---) #
    Antergos [Desktop] (Arch) *
    Manjaro [Desktop] (Arch) *
Debian [Server] (---) *
    antiX [Desktop] (Debian) #
    deepin [Desktop] (Debian) #
    Devuan [Server] (Debian) +
    Endless [Desktop] (Debian) #
    Kali [Special] (Debian) #
    MX Linux [Desktop] (Debian/antiX) *
    Ubuntu [Server] (Debian) *
        elementary [Desktop] (Debian/Ubuntu) *
        Mint [Desktop] (Debian/Ubuntu) *
        Lite [Desktop] (Debian/Ubuntu) #
        Peppermint [Desktop] (Debian/Lubuntu) +
        POP!_OS [Desktop] (Debian/Ubuntu) ^
        Zorin [Desktop] (Debian/Ubuntu) #
Fedora [Server] (---) *
    RHEL [Server] (Fedora) ^
        CentOS [Server] (Fedora/RHEL) #
        ClearOS [Server] (Fedora/RHEL) ^
        Scientific [Server] (RHEL) ^
FreeBSD [Server] (---) ^
    DragonFly BSD [Server] (FreeBSD) ^
    TrueOS [Server] (FreeBSD) #
Gentoo [Server] (---) ^
OpenBSD [Server] (---) ^
OpenSUSE [Server] (---) *
    Gecko [Desktop] (OpenSUSE) +
PCLinuxOS [Desktop] (---/Mandriva) #
Puppy [Desktop] (---) +
ReactOS [Desktop] (---) # (1)
Slackware [Server] (---) ^
Solaris [Server] (---) (2)
    OmniOS [Server] (Solaris)
    OpenIndiana [Desktop] (Solaris)
    SmartOS [Server] (Solaris) ^
Solus [Desktop] (---) *

* Top 10
# Top 20
+ Up-and-coming
^ Honorable Mentions
(1) Non-POSIX
(2) Non-Free/Non-OpenSource
Note: Most [Server] systems also have [Desktop] modes

#------------------------------------------------------------------------------
#-- Above list distilled into list of Linux server distros w/relatively
#   easy access (via containers from Docker Hub)
#------------------------------------------------------------------------------
Distro    Docker
Alpine    alpine
Arch      archlinux/base
Debian    debian
Ubuntu    ubuntu
Fedora    fedora
Gentoo    gentoo/stage3-amd64
OpenSUSE  opensuse (deprecated, use: opensuse/leap opensuse/tubleweed)
Slackware vbatts/slackware

#------------------------------------------------------------------------------
#-- "Official" Docker base OS containers (Versions as of 20170531)
#------------------------------------------------------------------------------
alpine:latest       3.6 (alpine:edge available)
amazonlinux:latest  2017.03
busybox:glibc       1.26.2 glibc (from Debian)
busybox:musl        1.26.2 musl (from Alpine)
busybox:uclibc      1.26.2 uClibc (from Buildroot)
centos:6            6.9
centos:latest       7.3
cirros:latest       0.3.4
clearlinux:latest
debian:jessie       8.8 (also debian:latest)
debian:stretch      9.0
debian:wheezy       7.11
fedora:latest       25 (fedora:24, fedora:rawhide available)
mageia:latest       5.1
opensuse:harlequin  13.2
opensuse:leap       42.2 (also opensuse:latest)
opensuse:tubleweed  dev version
oraclelinux:5       5.11
oraclelinux:6       6.9
oraclelinux:latest  7.3
photon:latest       1.0
sourcemage:latest   0.62
ubuntu:devel        17.10   (artful)
ubuntu:rolling      17.04   (zesty)
ubuntu:trusty       14.04.5 (trusty)
ubuntu:xenial       16.04   (xenial) (also ubuntu:latest)
ubuntu:yakkety      16.10   (yekkety)

#------------------------------------------------------------------------------
#-- "Unofficial" Docker base OS Containers
#------------------------------------------------------------------------------
base/archlinux
cern/slc5-base
cern/slc6-base
cern/slc7-base
elementary/docker
kalilinux/kali-linux-docker
mohemohe/antergos
nmaas87/docker-openwrt
vcatechnology/linux-mint

#------------------------------------------------------------------------------
#-- "Official" Docker language containers
#------------------------------------------------------------------------------
bash:3              3.2.57 (bash:3.[01] available)
bash:4              4.4.12 (also bash:latest) (bash:4.[0123] available)
erlang:latest       19.3.3
gazebo:latest       libgazebo8
gcc:latest          7.1.0
golang:latest       1.8.3 (golang:alpine available)
haskell:latest      8.0.2
node:latest         8.0.0 (node:alpine available)
openjdk:9           9-b170
openjdk:jdk         8u131 (also openjdk:latest) (openjdk:jre available)
perl:latest         5.24.1 (perl:5.22 available)
perl:threaded       5.24.1 (perl:5.22-threaded available)
php:latest          7.1.5 (php:7-apache, php:7-fpm available, php:alpine, php:7-fpm-alpine available)
pypy:latest         3-5.7.1 (alt python implementation)
python:2            2.7.13 (python:2-alpine available)
python:3            3.6.1 (also python:latest) (python:alpine available)
ros:latest          kinetic
ruby:latest         2.4.1 (ruby:alpine available)
swift:latest        3.1.0

#------------------------------------------------------------------------------
#-- "Unofficial" Docker language containers
#------------------------------------------------------------------------------
pypi/coconut:latest 0.3.2 (actually quite old)

#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
dsh -d <dist> -s <shell>

docker shell


sed -i -e "s/Required DatabaseOptional/Optional TrustAll/" /etc/pacman.conf


pacman-key --init

ln -sfn /dev/null /var/log/lastlog
cd /var/log
for FILE in lastlog utmp wtmp faillog ; do ln -sfn /dev/null "/var/log/${file}" ; done
#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
#--

rhel-7-server-rpms
rhel-7-server-ansible-2-rpms
rhel-7-server-extras-rpms
rhel-7-server-optional-rpms


rhel-7-server-optional-rpms
golang

*epel*
cargo rust rust-analysis rust-debugger-common

pip install alabaster \
            Sphinx \
            sphinx-better-theme \
            sphinx-py3doc-enhanced-theme \
            sphinx-rtd-theme \
            sphinxcontrib-fulltoc \
            sphinxcontrib-issuetracker \
            sphinxcontrib-plantuml \
            sphinxcontrib-programoutput \
            pygments-markdown-lexer \
            recommonmark \

python-sphinx
python-sphinx-doc
python-sphinx_rtd_theme
python-sphinxcontrib-issuetracker
python-sphinxcontrib-napoleon
python-sphinxcontrib-spelling

python2-sphinx
python2-sphinx-bootstrap-theme
python2-sphinx-theme-alabaster
python2-sphinxcontrib-httpdomain
python2-sphinxcontrib-programoutput
python2-pygments-markdown-lexer
python-markdown

    && yum-config-manager -q --enable rhel-7-server-optional-rpms >/dev/null \
    && yum-config-manager -q --enable *epel* >/dev/null \
    && yum -y install java-1.8.0-openjdk \
                      texlive-collection-latexrecommended \
                      texlive-environ \
                      texlive-epstopdf \
                      texlive-fncychap \
                      texlive-framed \
                      texlive-titlesec \
                      texlive-threeparttable \
                      texlive-upquote \
                      texlive-wrapfig \
                      texlive-multirow\

capt-of.sty  eqparbox.sty  tabulary.sty
#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
#--
ADD_UNAME=$(id -un)
ADD_GNAME=$(id -gn)
ADD_UID=$(id -u)
ADD_GID=$(id -g)
ADD_HOME=${HOME}
ADD_SHELL=/bin/zsh

FLAVOR='centos'
PREFIX='sash-'

docker run --tty --rm --interactive \
    --env ADD_UNAME="$(id -un)" \
    --env ADD_UID="$(id -u)" \
    --env ADD_GID="$(id -g)" \
    --env ADD_SHELL=/bin/zsh \
    --volume "${HOME}:/home/$(id -un):rw" \
    --hostname sash-"$(id -un)" \
    --name "${PREFIX}$(id -un)" \
    "${PREFIX}${FLAVOR}"

docker run --tty --detach \
    --env ADD_UNAME="$(id -un)" \
    --env ADD_UID="$(id -u)" \
    --env ADD_GID="$(id -g)" \
    --env ADD_SHELL="${SHELL}" \
    --volume "${HOME}:/home/$(id -un):rw" \
    --hostname "${PREFIX}$(id -un)" \
    --name "${PREFIX}$(id -un)" \
    "${PREFIX}${FLAVOR}"

docker exec --tty --interactive "${PREFIX}$(id -un)" su - "$(id -un)"

docker ps -q --filter "name=${PREFIX}$(id -un)"




bash
csh
dash
fish
ksh
mksh
pwsh
rc
rksh
saphire
sh
tcsh
tmux
xonsh
xs
xyzsh
yash
zsh

https://github.com/elves/elvish
https://github.com/oilshell/oil

/bin/bash
/bin/csh
/bin/dash
/bin/fish
/bin/ksh
/bin/mksh
/bin/rc
/bin/sh
/bin/tcsh
/bin/tmux
/bin/yash
/bin/zsh
#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------

docker run --rm -it \
    -v "$(pwd)":/tmp/$(basename "${PWD}") \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -w /tmp/$(basename "${PWD}") \
    retr0h/molecule:latest \
    molecule init role  --role-name ansible-consul
# equive to:  molecule init role  --role-name NAME --driver-name docker --verifier-name testinfra

docker run --rm -it \
    -v "$(pwd)":/tmp/$(basename "${PWD}"):ro \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -w /tmp/$(basename "${PWD}") \
    retr0h/molecule:latest \
    sudo molecule test

https://hub.docker.com/r/plantuml/plantuml-server/
docker run -d -p 8080:8080 plantuml/plantuml-server:jetty

however UMLgraph (https://www.spinellis.gr/umlgraph/) is avail in EPEL

#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
#-- Test username prefixes
# c-    "Clean" Empty home directory
# d-    "Default" Home directory (as created by useradd)
# t-    "Test" Home directory with dotfiles-public files
# o-    "Old" Home directory with old dotfiles (need to dig these up)
#-- Test shell (depends on availability) username suffixes
# ash
# bash
# csh
# dash
# fish
# ksh
# mksh
# rc
# sh
# tcsh
# tmux
# yash
# zsh
#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
/usr/include/sys/syslog.h

FACILITIES AND LEVELS (see /usr/include/sys/syslog.h)
LF_KERN      0 kern     kernel messages
LF_USER      1 user     random user-level messages (default)
LF_MAIL      2 mail     mail system
LF_DAEMON    3 daemon   system daemons
LF_AUTH      4 auth     security/authorization messages
LF_SYSLOG    5 syslog   messages generated internally by syslogd
LF_LPR       6 lpr      line printer subsystem
LF_NEWS      7 news     network news subsystem
LF_UUCP      8 uucp     UUCP subsystem
LF_CRON      9 cron     clock daemon
LF_AUTHPRIV 10 authpriv security/authorization messages (private)
LF_FTP      11 ftp      ftp daemon
LF_LOCAL[0-7] [16-23] local[0-7] Reserved for local use.

LL_EMERG    0 emerg     System is unusable. A panic condition.
LL_ALERT    1 alert     Action must be taken immediately, such as a corrupted system database.
LL_CRIT     2 crit      Critical conditions, such as hard device errors.
LL_ERR      3 err       Error conditions
LL_WARNING  4 warning   Warning conditions
LL_NOTICE   5 notice    Normal but significant condition. Conditions that are not error conditions, but that may require special handling.
LL_INFO     6 info      Informational
LL_DEBUG    7 debug     Debug-level messages
#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------
ar-discovery
ar-os_apps
ar-os_config_abrt
ar-os_config_misc
ar-os_config_network
ar-os_config_puppet
ar-os_config_smtp
ar-os_config_time
ar-os_security_aide
ar-os_security_auditd
ar-os_security_idm
ar-os_security_misc
ar-os_security_pam
ar-os_security_selinux
ar-os_security_ssh
ar-os_update
ar-user_apps
ar-user_config_common
ar-user_config_misc
ar-user_config_shell
ar-user_config_vi
docker-shelltest
cic-ansible
cic-git
cic-nginx
cic-sphinx

#------------------------------------------------------------------------------
#--
#------------------------------------------------------------------------------


